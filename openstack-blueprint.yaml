tosca_definitions_version: cloudify_dsl_1_2

########################################################

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.1/plugin.yaml
  - types/openstack-types.yaml


########################################################
inputs:
    image:
      description: >
        Image to be used when launching agent VM's
    flavor:
      description: >
        Flavor of the agent VM's
    agent_user:
      description: >
        User for connecting to agent VM's

########################################################

node_templates:
    dns_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create: scripts/dns-install.sh
              start:
                 implementation: scripts/dns-start.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_ip, aws_resource_id] }
              stop: scripts/dns-stop.sh
        relationships:
            - type: cloudify.relationships.contained_in
              target: dns_host

    dns_host:
        type: dns.nodes.MonitoredServer
        relationships:
            - type: cloudify.openstack.server_connected_to_security_group
              target: dns_security_group
            - type: cloudify.openstack.server_connected_to_floating_ip
              target: dns_ip
                
    dns_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            description: Security Group for DNS VM
            rules:
                - cidr_ip: 0.0.0.0/0
                  from_port: 53
                  to_port: 53
                  ip_protocol: udp

    dns_ip:
        type: cloudify.openstack.nodes.FloatingIP


outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ dns_ip, floating_ip_address ] }

